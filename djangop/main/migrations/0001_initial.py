# Generated by Django 2.1.3 on 2018-11-26 13:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import main.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('user_name', models.CharField(max_length=30, unique=True, verbose_name='Username')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date Joined')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', main.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('key', models.CharField(default=uuid.uuid4, max_length=100)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('approved', models.BooleanField(default=False, verbose_name='Approved')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pool', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('wager', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('key', models.CharField(default=uuid.uuid4, max_length=100)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Joined')),
                ('date_finished', models.DateTimeField(auto_now_add=True, verbose_name='Date Finished')),
                ('game', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='main.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=5000)),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date Joined')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Match')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerGroupPlayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.PlayerGroup')),
            ],
        ),
        migrations.CreateModel(
            name='SandboxMatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pool', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('maxPool', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('wager', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('key', models.CharField(default=uuid.uuid4, max_length=100)),
                ('state', models.IntegerField(choices=[(0, 'Registering'), (1, 'Active'), (2, 'Finished'), (3, 'Aborted')], default=0)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Joined')),
                ('date_started', models.DateTimeField(blank=True, null=True, verbose_name='Date Started')),
                ('date_finished', models.DateTimeField(blank=True, null=True, verbose_name='Date Finished')),
                ('game', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='main.Game')),
            ],
        ),
        migrations.CreateModel(
            name='SandboxMatchType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Game')),
            ],
        ),
        migrations.CreateModel(
            name='SandboxMatchTypeGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('match_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.SandboxMatchType')),
            ],
        ),
        migrations.CreateModel(
            name='SandboxPlayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('in_game', models.BooleanField(default=False, verbose_name='In Game')),
                ('wager', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('password', models.CharField(default='testpassword', max_length=30, verbose_name='Password')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Game')),
            ],
        ),
        migrations.CreateModel(
            name='SandboxPlayerGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.SandboxMatch')),
                ('type_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.SandboxMatchTypeGroup')),
            ],
        ),
        migrations.CreateModel(
            name='SandboxPlayerGroupPlayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quit', models.BooleanField(default=False)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.SandboxPlayer')),
                ('playerGroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.SandboxPlayerGroup')),
            ],
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('views', models.IntegerField(default=0)),
                ('sticky', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('company_name', models.CharField(max_length=30, verbose_name='First Name')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('first_name', models.CharField(max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=30, verbose_name='Last Name')),
                ('in_game', models.BooleanField(default=False, verbose_name='In Game')),
                ('wager', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('player_group', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to='main.PlayerGroup')),
            ],
        ),
        migrations.AddField(
            model_name='sandboxplayer',
            name='player_group',
            field=models.ForeignKey(blank=True, db_constraint=False, default=1, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='main.SandboxPlayerGroup'),
        ),
        migrations.AddField(
            model_name='sandboxmatch',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.SandboxMatchType'),
        ),
        migrations.AddField(
            model_name='sandboxmatch',
            name='winning_player_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.SandboxPlayerGroup'),
        ),
        migrations.AddField(
            model_name='message',
            name='thread',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Thread'),
        ),
        migrations.AddField(
            model_name='message',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='playergroupplayer',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Player'),
        ),
        migrations.AddField(
            model_name='game',
            name='developer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Developer'),
        ),
    ]
